{"version":3,"file":"static/js/31.a636843d.chunk.js","mappings":"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","sources":["components/Form/Form.jsx","components/Filter/Filter.jsx","../node_modules/@chakra-ui/layout/src/list.tsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Contacts/Contacts.jsx","../node_modules/@chakra-ui/icons/src/Delete.tsx","../node_modules/@chakra-ui/icons/src/Phone.tsx","../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { ArrowForwardIcon, PhoneIcon } from '@chakra-ui/icons';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport {\n  Heading,\n  Flex,\n  Box,\n  Stack,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Card,\n  CardBody,\n} from '@chakra-ui/react';\n\nimport { selectContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/reducers/contacts/operations';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const { error } = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  if (error) {\n    return Notify.failure(error);\n  }\n\n  return (\n    <Box>\n      <Flex\n        flexDirection=\"column\"\n        justify=\"flex-start\"\n        align=\"center\"\n        gap=\"15px\"\n        padding=\"15px\"\n      >\n        <Heading as=\"h1\" size=\"lg\" color=\"#2196f3\">\n          Phonebook\n        </Heading>\n        <Card\n          variant=\"outline\"\n          borderColor=\"#d8dee4\"\n          w=\"400px\"\n          size=\"lg\"\n          borderRadius={8}\n          boxShadow=\"lg\"\n        >\n          <CardBody gap=\"10px\">\n            <form onSubmit={handleSubmit}>\n              <Stack spacing=\"4\">\n                <FormControl isRequired>\n                  <FormLabel size=\"md\">Name</FormLabel>\n\n                  <InputGroup>\n                    <InputLeftElement pointerEvents=\"none\">\n                      <ArrowForwardIcon color=\"gray.300\" />\n                    </InputLeftElement>\n                    <Input\n                      name=\"name\"\n                      placeholder=\"Enter Name\"\n                      type=\"text\"\n                      bg=\"white\"\n                      borderColor=\"#d8dee4\"\n                      size=\"md\"\n                      borderRadius=\"6px\"\n                    />\n                  </InputGroup>\n                </FormControl>\n\n                <FormControl isRequired>\n                  <FormLabel size=\"md\">Number</FormLabel>\n\n                  <InputGroup>\n                    <InputLeftElement pointerEvents=\"none\">\n                      <PhoneIcon color=\"gray.300\" />\n                    </InputLeftElement>\n                    <Input\n                      name=\"number\"\n                      placeholder=\"Enter phone number\"\n                      type=\"tel\"\n                      bg=\"white\"\n                      borderColor=\"#d8dee4\"\n                      size=\"md\"\n                      borderRadius=\"6px\"\n                    />\n                  </InputGroup>\n                </FormControl>\n\n                <Button\n                  type=\"submit\"\n                  bg=\"#2196f3\"\n                  color=\"white\"\n                  size=\"sm\"\n                  _hover={{ bg: 'darkblue' }}\n                  _active={{ bg: 'darkblue' }}\n                >\n                  Add contact\n                </Button>\n              </Stack>\n            </form>\n          </CardBody>\n        </Card>\n      </Flex>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Box, Flex, Heading, Input } from '@chakra-ui/react';\n\nimport { filterContact } from '../../redux/reducers/contacts/filterSlice';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const value = e.target.value;\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <Box>\n      <Flex flexDirection=\"column\" gap=\"10px\" justify=\"center\" align=\"center\">\n        <Heading as=\"h3\" size=\"md\" color=\"#2196f3\">\n          Find contacts by name\n        </Heading>\n        <Input\n          type=\"text\"\n          name=\"nametofilter\"\n          bg=\"white\"\n          borderColor=\"#d8dee4\"\n          size=\"md\"\n          borderRadius=\"6px\"\n          maxWidth=\"400px\"\n          minWidth=\"350px\"\n          width=\"50%\"\n          onChange={handleFilter}\n        />\n      </Flex>\n    </Box>\n  );\n}\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { PhoneIcon, DeleteIcon } from '@chakra-ui/icons';\nimport {\n  Flex,\n  ListItem,\n  ListIcon,\n  Button,\n  Card,\n  CardBody,\n} from '@chakra-ui/react';\n\nimport { deleteContact } from '../../../redux/reducers/contacts/operations';\n\nexport default function ContactListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const handleRemove = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ListItem key={id.toString()} width=\"450px\" align=\"flex-start\">\n      <Card>\n        <CardBody>\n          <Flex gap=\"10px\" justifyContent=\"space-between\" alignItems=\"center\">\n            <ListIcon as={PhoneIcon} color=\"blue.500\" />\n            {name}: {number}\n            <Button\n              leftIcon={<DeleteIcon />}\n              colorScheme=\"teal\"\n              variant=\"solid\"\n              type=\"button\"\n              bg=\"#2196f3\"\n              color=\"white\"\n              size=\"sm\"\n              _hover={{ bg: 'darkblue' }}\n              _active={{ bg: 'darkblue' }}\n              onClick={() => {\n                handleRemove(id);\n              }}\n            >\n              Delete\n            </Button>\n          </Flex>\n        </CardBody>\n      </Card>\n    </ListItem>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { Box, Flex, Heading, List, Text } from '@chakra-ui/react';\n\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport { selectFilterValue, selectContacts } from '../../redux/selectors';\n\nexport default function ContactList() {\n  const { contacts } = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilterValue);\n\n  const contactsValue = contacts.length;\n\n  const contactListItem = contacts\n    .filter(item => item.name.toLowerCase().includes(filterValue.toLowerCase()))\n    .map(item => (\n      <ContactListItem\n        id={item.id}\n        name={item.name}\n        number={item.number}\n        key={item.id}\n      />\n    ));\n\n  return (\n    <>\n      <Box>\n        <Flex\n          flexDirection=\"column\"\n          gap=\"10px\"\n          justify=\"center\"\n          align=\"center\"\n          paddingTop=\"30px\"\n        >\n          <Heading as=\"h2\" size=\"md\" color=\"#2196f3\">\n            Your contacts:\n          </Heading>\n          {contactsValue === 0 && <Text>You don't saved contacts yet.</Text>}\n          <List spacing={3}>{contactListItem}</List>\n        </Flex>\n      </Box>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Form from '../Form/Form';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport { fetchContacts } from '../../redux/reducers/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Form />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const DeleteIcon = createIcon({\n  displayName: \"DeleteIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M19.452 7.5H4.547a.5.5 0 00-.5.545l1.287 14.136A2 2 0 007.326 24h9.347a2 2 0 001.992-1.819L19.95 8.045a.5.5 0 00-.129-.382.5.5 0 00-.369-.163zm-9.2 13a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zm5 0a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zM22 4h-4.75a.25.25 0 01-.25-.25V2.5A2.5 2.5 0 0014.5 0h-5A2.5 2.5 0 007 2.5v1.25a.25.25 0 01-.25.25H2a1 1 0 000 2h20a1 1 0 000-2zM9 3.75V2.5a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v1.25a.25.25 0 01-.25.25h-5.5A.25.25 0 019 3.75z\" />\n    </g>\n  ),\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\",\n})\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["Form","dispatch","useDispatch","error","useSelector","selectContacts","Notify","_jsx","Box","children","_jsxs","Flex","flexDirection","justify","align","gap","padding","Heading","as","size","color","Card","variant","borderColor","w","borderRadius","boxShadow","CardBody","onSubmit","event","preventDefault","form","currentTarget","name","elements","value","number","addContact","reset","Stack","spacing","FormControl","isRequired","FormLabel","InputGroup","InputLeftElement","pointerEvents","ArrowForwardIcon","Input","placeholder","type","bg","PhoneIcon","Button","_hover","_active","Filter","maxWidth","minWidth","width","onChange","e","target","filterContact","createContext","errorMessage","_createContext2","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","rest","validChildren","getValidChildren","spacingStyle","mt","chakra","ul","listStyleType","listStylePosition","role","__css","container","displayName","marginStart","ListItem","li","item","ListIcon","Icon","icon","ContactListItem","_ref","id","justifyContent","alignItems","leftIcon","DeleteIcon","colorScheme","onClick","deleteContact","handleRemove","toString","ContactList","contacts","filterValue","selectFilterValue","contactsValue","length","contactListItem","filter","toLowerCase","includes","map","_Fragment","paddingTop","Text","Contacts","useEffect","fetchContacts","createIcon","path","fill","d","viewBox","useStyleConfig","className","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","p","cx","h2"],"sourceRoot":""}